# Foundry Testing & Debugging Tool

## Struktur Repositori

```
foundry-testing-tool/
â”œâ”€â”€ contracts/        # Smart contracts to be tested
â”‚   â”œâ”€â”€ Example.sol   # Example smart contract
â”œâ”€â”€ test/             # Foundry test scripts
â”‚   â”œâ”€â”€ Example.t.sol # Test file for Example.sol
â”œâ”€â”€ scripts/          # Python automation scripts
â”‚   â”œâ”€â”€ testing_tool.py # Main testing script
â”œâ”€â”€ .gitignore        # Ignore unnecessary files
â”œâ”€â”€ README.md         # Documentation
```

## Deskripsi Skrip Testing

### `scripts/testing_tool.py`
Skrip ini menjalankan berbagai proses debugging dan optimasi pada smart contract menggunakan Foundry:

- **Simulasi Transaksi** â†’ `forge test`
- **Snapshot Gas** â†’ `forge snapshot`
- **Fuzzing** â†’ `forge test --fuzz-runs 1000`

### Kode Skrip Testing (`scripts/testing_tool.py`)

```python
import subprocess

def run_forge_tests():
    """Run Foundry tests and return the results."""
    result = subprocess.run(["forge", "test"], capture_output=True, text=True)
    return result.stdout

def run_gas_snapshot():
    """Generate gas snapshots to analyze contract gas usage."""
    result = subprocess.run(["forge", "snapshot"], capture_output=True, text=True)
    return result.stdout

def run_fuzzing():
    """Execute fuzzing tests on smart contracts."""
    result = subprocess.run(["forge", "test", "--fuzz-runs", "1000"], capture_output=True, text=True)
    return result.stdout

if __name__ == "__main__":
    print("Running Foundry Testing & Debugging Tool...\n")
    
    print("--- Running Forge Tests ---")
    print(run_forge_tests())
    
    print("--- Running Gas Snapshot ---")
    print(run_gas_snapshot())
    
    print("--- Running Fuzzing Tests ---")
    print(run_fuzzing())
```

## Cara Menggunakan

1. **Clone Repository:**
   ```bash
   git clone https://github.com/username/foundry-testing-tool.git
   cd foundry-testing-tool
   ```
2. **Pastikan Foundry Sudah Terinstall:**
   ```bash
   curl -L https://foundry.paradigm.xyz | bash
   foundryup
   ```
3. **Jalankan Skrip Python:**
   ```bash
   python scripts/testing_tool.py
   ```

## Kontribusi
Pull request dipersilakan! Pastikan untuk menulis tes yang relevan sebelum mengirimkan perubahan.

---

ðŸš€ Semoga bermanfaat untuk debugging dan optimasi smart contract-mu!
